#!/bin/python

# ======================================================= IMPORTS & MODULE SETUP


import os
import sys
from time import sleep
import subprocess as sh

from CatalisUtils.hardware import Led


# ================================================================ SERVICE CLASS


class Service():
	def __init__(self, name:str):
		self.name = f"{name}.service"

	# get service status
	def status(self):
		return sh.getoutput(f"systemctl is-failed {self.name}")


# ================================================================== MAIN DAEMON


# daemon
def daemon():
	identifier = sys.argv[1]

	mapping = [
		{
			"service": Service(f"catalis-chmi@{identifier}"),
			"leds": {
				"green": Led(17),
				"red": Led(27)
			}
		},
		{
			"service": Service(f"catalis-init@{identifier}"),
			"leds": {
				"green": Led(5),
				"red": Led(6)
			}
		},
		{
			"service": Service(f"catalis-poll@{identifier}"),
			"leds": {
				"green": Led(19),
				"red": Led(26)
			}
		},
		{
			"service": Service(f"catalis-csync@{identifier}"),
			"leds": {
				"green": Led(20),
				"red": Led(21)
			}
		}
	]

	# reset failed states
	sh.run("systemctl reset-failed", shell=True)

	try:
		while True:
			for service in mapping:
				# turn off all leds for service
				for led in service["leds"].values(): led.off()

				# set led according to status
				if service["service"].status() == "failed":	service["leds"]["red"].on()
				elif service["service"].status() == "active": service["leds"]["green"].on()

			sleep(1)

	# turn off all leds on exit
	except KeyboardInterrupt:
		for service in mapping:
			for led in service["leds"].values():
				led.off()


# ================================================================== DRIVER CODE


# driver
if __name__ == "__main__":
	daemon()



